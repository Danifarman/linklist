 // Online C++ compiler to run C++ program online
#include <iostream>
using namespace std;

class node {
    public:
    int data;
    node * next;
};
void deletenode(node *& head) {
    int reg;
    cout << "Enter registration to delete: ";
    cin >> reg;

    node *cur = head;
    node *temp = nullptr;

    // If head node needs to be deleted
    if (head != nullptr && head->data == reg) {
        temp = head;
        head = head->next;
        delete temp;
        return;
    }

    // Find the node to be deleted
    while (cur != nullptr && cur->next != nullptr) {
        if (cur->next->data == reg) {
            temp = cur->next;
            cur->next = temp->next;
            delete temp;
            return;
        }
        cur = cur->next;
    }

    cout << "Registration " << reg << " not found in the list." << endl;
}

// void deletenode(node *& head){
//      int reg;
//   cout<<"Enter registration to delete : ";
//   cin>>reg;
//     node * cur = head;
//      node * temp = nullptr;
//     if(reg==head->data){
        
//         head=head->next;
//         free(cur);
//     }
//       while (cur != nullptr && cur->next != nullptr){
//      if (reg==cur->next->data)
   
    
//       temp=cur;
//      if (cur->next->next!=nullptr){
//         temp=temp->next;
//         cur->next=temp->next;
//         cur=temp->next;
//         free(temp);
//         return;
//     }
    
//       }
    
// }
void creatnode(node*&head){
    char choice;
        int roll;
        node*cur=nullptr;
    
       do{
        cout << "Enter roll no : ";
        cin >> roll;
        
        node* newnode = new node;
        newnode->data = roll;
        newnode->next = nullptr;

        if (head == nullptr) {
            head = newnode;
            cur = head;
        } else {
            cur->next = newnode;
            cur = cur->next;
        }

        cout << "Do you want to enter another roll number? (y/n): ";
        cin >> choice;
    } while(choice == 'y' || choice == 'Y');

}
void displaynode(node * head ){
     node * temp = head;
 while(temp){
     cout<<temp->data<<" -> ";
     temp=temp->next;
 }
 cout<<"null"<<endl;
}
void updatenode(node * head ){
    int re;int ned;
    cout<<"Enter regestration to update : ";
    cin>>re;
    node * temp = head;
    while(temp){
    if(re==temp->data){
        cout<<"enter new data : ";
        cin>>ned;
        temp->data=ned;
        
    }
    temp=temp->next;
    }
}

 int main() {
     
     int choice;
node* head = nullptr;
do{
 cout<<"menu\n";
 cout<<"1.create\n"<<"2.display\n"<<"3.delete\n"<<"4.update\n"<<"5.exit\n"<<"Enter choice : ";cin>>choice;
 
 switch(choice){
     case 1:
     creatnode(head);
     break;
     case 2: 
     displaynode(head);
    break;
    case 3:
    deletenode(head);
    break;
     case 4:
     updatenode(head);
     break;
     case5:
     exit(-1);
     default:
     cout<<"end";
 }
}while(true);


 



//   displaynode(head);
//   cout<<head->data;
    return 0;
}


  
 